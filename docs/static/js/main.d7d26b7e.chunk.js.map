{"version":3,"sources":["components/AddCategory.js","helpers/getgifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","a","url","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","category","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpert","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAG1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBa,SAACP,GACtBF,EAAeE,EAAEQ,OAAOF,a,+BCTnBG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAEbC,EAFa,iDAEoCP,EAFpC,+DAGAQ,MAAOD,GAHP,cAGbE,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAQD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAVvB,kBAcZK,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAEjC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE3B,MAA0BhC,mBAAS,CAC/BmB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEVvB,EAASmB,GACJK,MAAM,SAAAC,GACHC,YAAa,WACTJ,EAAS,CACLhB,KAAMmB,EACNL,SAAS,MAEd,UAER,CAAED,IAECE,EDhB4BM,CAAcR,GAAnCP,EAAb,EAAQN,KAAcc,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIL,UAAU,oCAAd,SAAoDI,IAElDC,GAAW,mBAAGL,UAAU,mCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAE,EAAF,eAEQA,GADEA,EAAIC,aEbzBkB,EAAY,WAErB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQS,EAAWa,KAAK,SAAAW,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MClB9BU,IAASC,OAAQ,cAAC,EAAD,IAAcC,SAASC,eAAe,W","file":"static/js/main.d7d26b7e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    \r\n    const [inputValue, setInputValue] = useState(''); \r\n\r\n    const hadleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( categories => [ inputValue, ...categories ] ); \r\n            setInputValue(''); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue }\r\n                onChange={ hadleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory\r\n","export const getGifs = async( categories ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ categories }&limit=10&api_key=b6hOQ0ozU969AJJ1ljsbBMSM8EFBrKJd`;\r\n    const resp = await fetch( url ); \r\n    const { data } = await resp.json(); \r\n\r\n    const gifts = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifts; \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>  \r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getgifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images , loading } = useFetchGifs( category ); \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                { \r\n                    images.map( (img) => (\r\n                        < GifGridItem\r\n                            key={ img.id }\r\n                            {...img}\r\n                        />\r\n                    ))  \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getgifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n   const [state, setstate] = useState({\r\n       data: [],\r\n       loading: true\r\n   }); \r\n\r\n   useEffect( () => {\r\n\r\n    getGifs( category )\r\n        .then( imgs => {\r\n            setTimeout ( () => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 3000);\r\n        })\r\n    }, [ category ]) \r\n\r\n   return state; \r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpert = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']); \r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( categories => [ ...categories, 'Nanatsu no taizai' ] ); \r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => \r\n                        <GifGrid \r\n                        key={ category }\r\n                        category={ category } />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpert } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render( <GifExpert />,document.getElementById('root') );\n\n\n"],"sourceRoot":""}